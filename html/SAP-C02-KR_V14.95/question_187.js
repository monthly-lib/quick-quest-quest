const question_187=`QUESTION NO: 187 솔루션 설계자는 클라우드 엔지니어 팀이 AWS CLI를 사용하여 객체를 Amazon S3 버킷에 업로드할 수 있는 안전한 방법을 제공해야 합니다. 각 클라우드 엔지니어에게는 IAM 사용자가 있습니다. IAM 액세스 키 및 가상 MFA(Multi-Factor Authentication) 장치 클라우드 엔지니어의 IAM 사용자는 S3-access라는 그룹에 있습니다. 클라우드 엔지니어는 MFA를 사용하여 Amazon S3에서 작업을 수행해야 합니다. 이러한 요구 사항을 충족하는 솔루션은 무엇입니까? ? A. 정책을 S3 버킷에 연결하여 오전 1시 사용자가 S3 버킷에서 작업을 수행할 때 오전 1시 사용자에게 MFA 코드를 묻는 메시지를 표시합니다. AWS CLI와 함께 1AM 액세스 키를 사용하여 Amazon S3를 호출합니다. B. 보안 주체가 그룹을 맡을 때 보안 주체가 MFA를 사용하도록 요구하도록 S3 액세스 그룹에 대한 신뢰 정책 업데이트 AWS CLI와 함께 1AM 액세스 키를 사용하여 Amazon S3 호출 C. 정책을 S3 액세스 그룹에 연결하여 MFA가 없는 경우 모든 S3 작업을 거부합니다. AWS CLI와 함께 1AM 액세스 키를 사용하여 Amazon S3 호출 D. 정책을 S3 액세스 그룹에 연결하여 MFA가 없는 경우 모든 S3 작업을 거부합니다. AWS Security Token Service(AWS STS)에서 임시 자격 증명을 요청합니다. 사용자가 작업을 수행할 때 Amazon S3가 참조할 프로필에 임시 자격 증명을 연결합니다. Amazon S3의 작업 Answer: D Explanation: The company should attach a policy to the S3-access group to deny all S3 actions unless MFA is present. The company should request temporary credentials from AWS Security Token Service (AWS STS). The company should attach the temporary credentials in a profile that Amazon S3 will reference when the user performs actions in Amazon S3. This solution will meet the requirements because AWS STS is a service that enables you to request temporary, limited-privilege credentials for IAM users or for users that you authenticate (federated users). You can use MFA with AWS STS to provide an extra layer of security when requesting temporary credentials1. You can use the sts get-session-token AWS CLI command to request temporary credentials that include an MFA token2. You can then use these credentials with the AWS CLI to access Amazon S3 resources. To do this, you need to attach a policy to the IAM group that denies all S3 actions unless MFA is present3. You also need to create a profile in the AWS CLI configuration file that references the temporary credentials. The other options are not correct because: Attaching a policy to the S3 bucket to prompt the IAM user for an MFA code when the IAM user performs actions on the S3 bucket would not work because policies attached to S3 buckets cannot enforce MFA authentication. Policies attached to S3 buckets are resourcebased policies that define what actions can be performed on the bucket and by whom. They do not have any logic to prompt for an MFA code or verify it. Updating the trust policy for the S3-access group to require principals to use MFA when principals assume the group would not work because trust policies are used for roles, not groups. Trust policies are policies that define which principals can assume a role. They do not apply to groups, which are collections of IAM users that share permissions. Creating an Amazon Route 53 Resolver DNS Firewall domain list that contains the allowed domains and configuring a DNS Firewall rule group with rules to allow or block requests based on the domain list would not help with enforcing MFA authentication for Amazon S3 actions. Amazon Route 53 Resolver DNS Firewall is a feature that enables you to filter and regulate outbound DNS traffic for your VPC. You can create reusable collections of filtering rules in DNS Firewall rule groups and associate them with your VPCs. You can specify lists of domain names to allow or block, and you can customize the responses for the DNS queries that you block. This feature is useful for controlling access to sites and blocking DNSlevel threats, but not for requiring MFA authentication. Reference: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_enable_cliapi.html https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sample-policies.html https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver-dns-firewall.html`;