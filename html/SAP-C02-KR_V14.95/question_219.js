const question_219=`QUESTION NO: 219 회사에서 Redis용 Amazon ElastiCache 클러스터를 캐싱 계층으로 사용하는 애플리케이션을 실행하고 있습니다. 최근 보안 감사에서 회사가 ElastiCache에 대해 유휴 암호화를 구성한 것으로 나타났습니다. 그러나 회사는 전송 중 암호화를 사용하도록 ElastiCache를 구성하지 않았습니다. 또한 사용자는 액세스할 수 있습니다. 인증 없는 캐시 솔루션 설계자는 사용자 인증을 요구하고 회사가 종단 간 암호화를 사용하도록 변경해야 합니다. 어떤 솔루션이 이러한 요구 사항을 충족합니까? A. AUTH 토큰 생성 토큰을 암호화된 파라미터로 AWS System Manager Parameter Store에 저장 AUTH로 새 클러스터를 생성하고 전송 중 암호화 구성 필요한 경우 Parameter Store에서 AUTH 토큰을 검색하고 인증을 위한 AUTH 토큰 B. AUTH 토큰을 생성합니다. AWS Secrets Manager에 토큰을 저장합니다. AUTH 토큰을 사용하도록 기존 클러스터를 구성하고 전송 중 암호화를 구성합니다. 필요한 경우 Secrets Manager에서 AUTH 토큰을 검색하고 인증에 AUTH 토큰을 사용하도록 애플리케이션을 업데이트합니다. . C. SSL 인증서 생성 AWS Secrets Manager에 인증서 저장 새 클러스터 생성 및 전송 중 암호화 구성 필요할 때 Secrets Manager에서 SSL 인증서를 검색하고 인증에 인증서를 사용하도록 애플리케이션을 업데이트합니다. D. SSL 인증서 생성 암호화된 고급 파라미터로 AWS Systems Manager Parameter Store에 인증서 저장 기존 클러스터를 업데이트하여 전송 중 암호화 구성 필요한 경우 Parameter Store에서 SSL 인증서를 검색하고 인증서를 사용하도록 애플리케이션 업데이트 인증을 위해 Answer: B Explanation: Creating an AUTH token and storing it in AWS Secrets Manager and configuring the existing cluster to use the AUTH token and configure encryption in transit, and updating the application to retrieve the AUTH token from Secrets Manager when necessary and to use the AUTH token for authentication, would meet the requirements for user authentication and endto- end encryption. AWS Secrets Manager is a service that enables you to easily rotate, manage, and retrieve database credentials, API keys, and other secrets throughout their lifecycle. Secrets Manager also enables you to encrypt the data and ensure that only authorized users and applications can access it. By configuring the existing cluster to use the AUTH token and encryption in transit, all data will be encrypted as it is sent over the network, providing additional security for the data stored in ElastiCache. Additionally, by updating the application to retrieve the AUTH token from Secrets Manager when necessary and to use the AUTH token for authentication, it ensures that only authorized users and applications can access the cache. Reference: AWS Secrets Manager documentation: https://aws.amazon.com/secrets-manager/ Encryption in transit for ElastiCache: https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/encryption.html Authentication and Authorization for ElastiCache: https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/accessing-elasticache.html`;