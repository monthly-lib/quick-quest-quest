const question_113=`QUESTION NO: 113 회사는 AWS Cloud에서 처리 엔진을 실행합니다. 엔진은 지속 가능성 지수를 계산하기 위해 물류 센터의 환경 데이터를 처리합니다. 회사는 유럽 전역에 분산된 물류 센터에 수백만 대의 장치를 보유하고 있습니다. 장치는 RESTful API를 통해 처리 엔진에 정보를 전송합니다. API에서 예측할 수 없는 트래픽 폭증 발생 회사는 장치가 처리 엔진으로 보내는 모든 데이터를 처리하는 솔루션을 구현해야 합니다. 데이터 손실이 허용되지 않습니다. 이러한 요구 사항을 충족하는 솔루션은 무엇입니까? A. RESTful API용 ALB(Application Load Balancer) 생성 Amazon Simple Queue Service(Amazon SQS) 대기열 생성 ALB용 리스너 및 대상 그룹 생성 SQS 대기열을 대상으로 추가 다음에서 실행되는 컨테이너 사용 대기열의 메시지를 처리하기 위한 Fargate 시작 유형이 있는 Amazon Elastic Container Service(Amazon ECS) B. RESTful API를 구현하는 Amazon API Gateway HTTP API 생성 Amazon Simple Queue Service(Amazon SQS) 대기열 생성 SQS 대기열과 API Gateway 서비스 통합 생성 SQS 대기열의 메시지를 처리하는 AWS Lambda 함수 생성 C. RESTful API를 구현하는 Amazon API Gateway REST API 생성 Auto Scaling 그룹에 Amazon EC2 인스턴스 플릿 생성 API Gateway Auto Scaling 그룹 프록시 통합 생성 EC2 인스턴스를 사용하여 수신 데이터 처리 D. RESTful API용 Amazon CloudFront 배포 생성 Amazon Kinesis Data Streams에서 데이터 스트림 생성 데이터 스트림을 배포의 오리진으로 설정 데이터 스트림에서 데이터를 소비하고 처리하는 AWS Lambda 함수 생성 Answer: A(B인것같음) Explanation: it will use the ALB to handle the unpredictable bursts of traffic and route it to the SQS queue. The SQS queue will act as a buffer to store incoming data temporarily and the container running in Amazon ECS with the Fargate launch type will process messages in the queue. This approach will ensure that all data is processed and prevent data loss.`;