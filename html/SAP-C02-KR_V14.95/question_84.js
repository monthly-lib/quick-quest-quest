const question_84=`QUESTION NO: 84 회사는 AWS Organizations의 회사 조직 내 개발자 계정 전체에서 AWS 데이터 전송 비용 및 컴퓨팅 비용을 최적화하려고 합니다. 개발자는 단일 AWS 리전에서 VPC를 구성하고 Amazon EC2 인스턴스를 시작할 수 있습니다. EC2 인스턴스는 Amazon에서 매일 약 1TB의 데이터를 검색합니다. S3 개발자 활동으로 인해 높은 컴퓨팅 비용과 함께 EC2 인스턴스와 S3 버킷 간의 과도한 월 데이터 전송 요금 및 NAT 게이트웨이 처리 요금이 발생합니다. AWS 계정 회사는 이러한 시행이 개발자가 작업을 수행할 수 있는 속도에 부정적인 영향을 미치기를 원하지 않습니다. 어떤 솔루션이 이러한 요구 사항을 가장 비용 효율적으로 충족할까요? A. 개발자가 승인되지 않은 EC2 인스턴스 유형을 시작하지 못하도록 SCP를 생성합니다. 개발자에게 AWS CloudFormation 템플릿을 제공하여 승인된 VPC 구성을 S3 인터페이스 엔드포인트로 배포합니다. 개발자* IAM 권한 범위를 지정하여 개발자가 CloudFormation에서만 VPC 리소스를 시작할 수 있도록 합니다. B. 개발자 계정 전체에서 EC2 컴퓨팅 비용 및 S3 데이터 전송 비용을 모니터링하기 위해 AWS 예산으로 일일 예측 예산을 생성합니다. 예측 비용이 실제 예산 비용의 75%이면 개발자 팀에 알림을 보냅니다. 예산 비용은 100%입니다. 개발자의 EC2 인스턴스 및 VPC 인프라를 종료하기 위한 예산 조치 생성 C. 사용자가 S3 게이트웨이 엔드포인트 및 승인된 EC2 인스턴스로 승인된 VPC 구성을 생성하는 데 사용할 수 있는 AWS Service Catalog 포트폴리오 생성 개발자 계정과 포트폴리오 공유 승인된 IAM 역할을 사용하도록 AWS Service Catalog 시작 제약 조건 구성 범위 AWS Service Catalog에 대한 액세스만 허용하는 개발자의 IAM 권한 D. AWS Config 규칙을 생성 및 배포하여 개발자 AWS 계정에서 EC2 및 VPC 리소스의 규정 준수를 모니터링합니다. 개발자가 승인되지 않은 EC2 인스턴스를 시작하거나 개발자가 S3 게이트웨이 엔드포인트 없이 VPC를 생성하는 경우 수정 작업을 수행하여 승인되지 않은 리소스를 종료합니다. Answer: C Explanation: This solution allows developers to quickly launch resources using pre-approved configurations and instance types, while also ensuring that the resources launched comply with the company's architectural patterns. This can help reduce data transfer and compute costs associated with the resources. Using AWS Service Catalog also allows the company to control access to the approved configurations and resources through the use of IAM roles, while also allowing developers to quickly provision resources without negatively affecting their ability to perform their tasks. Reference: AWS Service Catalog: https://aws.amazon.com/service-catalog/ AWS Service Catalog Constraints: https://docs.aws.amazon.com/servicecatalog/latest/adminguide/constraints.html AWS Service Catalog Launch Constraints: https://docs.aws.amazon.com/servicecatalog/latest/adminguide/launch-constraints.html`;