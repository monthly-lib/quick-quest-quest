const question_159=`QUESTION NO: 159 회사는 데이터 분석 환경을 온프레미스에서 AWS로 마이그레이션하려고 합니다. 환경은 두 개의 간단한 Node js 애플리케이션으로 구성됩니다. 애플리케이션 중 하나는 센서 데이터를 수집하여 MySQL 데이터베이스에 로드합니다. 다른 애플리케이션은 데이터를 보고서로 집계합니다. 집계 작업이 실행될 때 . 일부 로드 작업이 제대로 실행되지 않음 회사는 데이터 로드 문제를 해결해야 합니다. 회사는 또한 회사 고객을 위해 중단이나 변경 없이 마이그레이션이 수행되어야 합니다. 솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까? A. Amazon Aurora MySQL 데이터베이스를 온프레미스 데이터베이스의 복제 대상으로 설정 Aurora MySQL 데이터베이스에 대한 Aurora 복제본을 생성하고 집계 작업을 이동하여 Aurora 복제본에 대해 실행 수집 엔드포인트를 AWS Lambda 함수로 설정 NLB(Network Load Balancer) 뒤에 있습니다. 그리고 Amazon RDS 프록시를 사용하여 Aurora MySQL 데이터베이스에 연결합니다. 데이터베이스가 동기화되면 복제 작업을 비활성화하고 Aurora 복제본을 기본 인스턴스로 다시 시작합니다. 수집기 DNS 레코드가 NLB를 가리키도록 합니다. B. Amazon Aurora MySQL 데이터베이스 설정 AWS DMS(AWS Database Migration Service)를 사용하여 온프레미스 데이터베이스에서 Aurora로 연속 데이터 복제 수행 집계 작업을 이동하여 Aurora MySQL 데이터베이스에 대해 실행 Auto Scaling 그룹의 Amazon EC2 인스턴스인 Application Load Balancer(ALB) 데이터베이스가 동기화되면 수집기 DNS 레코드가 ALB를 가리키도록 합니다. 온프레미스에서 AWS로 컷오버한 후 AWS DMS 동기화 작업을 비활성화합니다. C. Amazon Aurora MySQL 데이터베이스 설정 AWS DMS(AWS Database Migration Service)를 사용하여 온프레미스 데이터베이스에서 Aurora로 연속 데이터 복제 수행 Aurora MySQL 데이터베이스용 Aurora 복제본 생성 및 실행할 집계 작업 이동 Aurora 복제본 수집 엔드포인트를 Application Load Balancer(ALB) 뒤에 있는 AWS Lambda 함수로 설정하고 Amazon RDS Proxy를 사용하여 Aurora MySQL 데이터베이스에 쓰기 데이터베이스가 동기화되면 수집기 DNS 레코드를 ALB로 지정 AWS DMS 동기화 비활성화 온프레미스에서 AWS로 컷오버 후 작업 D. Amazon Aurora MySQL 데이터베이스 설정 Aurora MySQL 데이터베이스용 Aurora 복제본 생성 및 집계 작업을 이동하여 Aurora 복제본에 대해 실행 컬렉션 엔드포인트를 Amazon Kinesis 데이터 스트림으로 설정 Amazon Kinesis Data Firehose를 사용하여 데이터 복제 데이터베이스가 동기화되면 복제 작업을 비활성화하고 Aurora 복제본을 기본 인스턴스로 다시 시작합니다. 수집기 DNS 레코드가 Kinesis 데이터 스트림을 가리키도록 합니다. Answer: C Explanation: Set up an Amazon Aurora MySQL database. Use AWS Database Migration Service (AWS DMS) to perform continuous data replication from the on-premises database to Aurora. Create an Aurora Replica for the Aurora MySQL database, and move the aggregation jobs to run against the Aurora Replica. Set up collection endpoints as AWS Lambda functions behind an Application Load Balancer (ALB), and use Amazon RDS Proxy to write to the Aurora MySQL database. When the databases are synced, point the collector DNS record to the ALB. Disable the AWS DMS sync task after the cutover from on premises to AWS. Amazon RDS Proxy allows applications to pool and share connections established with the database, improving database efficiency and application scalability. With RDS Proxy, failover times for Aurora and RDS databases are reduced by up to 66%`;