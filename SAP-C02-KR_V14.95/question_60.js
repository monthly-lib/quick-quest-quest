const question_60=`QUESTION NO: 60 솔루션 설계자는 Amazon API Gateway 지역 엔드포인트와 AWS Lambda 함수를 사용하는 웹 애플리케이션을 개발했습니다. 웹 애플리케이션의 소비자는 모두 애플리케이션이 배포될 AWS 리전에 가깝습니다. Lambda 함수는 Amazon Aurora MySQL 데이터베이스만 쿼리합니다. 솔루션 설계자는 3개의 읽기 전용 복제본을 갖도록 데이터베이스를 구성했습니다. 테스트 중에 응용 프로그램이 성능 요구 사항을 충족하지 않습니다. 부하가 높을 때 응용 프로그램은 많은 수의 데이터베이스 연결을 엽니다. 솔루션 설계자는 애플리케이션의 성능을 개선해야 합니다. 솔루션 설계자는 이러한 요구 사항을 충족하기 위해 어떤 조치를 취해야 합니까? (2개 선택하세요.) A. Aurora 데이터베이스의 클러스터 엔드포인트를 사용합니다. B. RDS Proxy를 사용하여 Aurora 데이터베이스의 리더 엔드포인트에 대한 연결 풀을 설정합니다. C. Lambda 프로비저닝된 동시성 기능을 사용합니다. D. 이벤트 핸들러 외부의 Lambda 함수에서 데이터베이스 연결을 열기 위한 코드를 이동합니다. E. API 게이트웨이 엔드포인트를 엣지 최적화 엔드포인트로 변경합니다. Answer: B,D Explanation: Connect to RDS outside of Lambda handler method to improve performance https://awstut.com/en/2022/04/30/connect-to-rds-outside-of-lambda-handler-method-toimprove- performance-en/ Using RDS Proxy, you can handle unpredictable surges in database traffic. Otherwise, these surges might cause issues due to oversubscribing connections or creating new connections at a fast rate. RDS Proxy establishes a database connection pool and reuses connections in this pool. This approach avoids the memory and CPU overhead of opening a new database connection each time. To protect the database against oversubscription, you can control the number of database connections that are created. https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-proxy.html`;