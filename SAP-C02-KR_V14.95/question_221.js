const question_221=`QUESTION NO: 221 비디오 처리 회사에는 Amazon S3 버킷에서 이미지를 다운로드하고, 이미지를 처리하고, 변환된 이미지를 두 번째 S3 버킷에 저장하고, Amazon DynamoDB 테이블에서 이미지에 대한 메타데이터를 업데이트하는 애플리케이션이 있습니다. 애플리케이션은 Node.js로 작성되고 AWS Lambda 함수를 사용하여 실행됩니다. 새 이미지가 Amazon S3에 업로드되면 Lambda 함수가 호출됩니다. 애플리케이션은 한동안 아무 문제 없이 실행되었습니다. 그러나 이미지의 크기가 크게 커졌습니다. 이제 Lambda 함수가 시간 초과 오류로 인해 자주 실패합니다. 기능 제한 시간은 최대값으로 설정됩니다. 솔루션 설계자는 호출 실패를 방지하기 위해 애플리케이션의 아키텍처를 리팩터링해야 합니다. 회사는 기본 인프라를 관리하기를 원하지 않습니다. 솔루션 설계자는 이러한 요구 사항을 충족하기 위해 어떤 단계 조합을 수행해야 합니까? (2개 선택하세요.) A. 애플리케이션 코드가 포함된 Docker 이미지를 빌드하여 애플리케이션 배포를 수정합니다. 이미지를 Amazon Elastic Container Registry(Amazon ECR)에 게시합니다. B. 호환 유형이 AWS Fargate인 새 Amazon Elastic Container Service(Amazon ECS) 작업 정의를 생성합니다. Amazon Elastic Container Registry(Amazon ECR)에서 새 이미지를 사용하도록 작업 정의를 구성합니다. 새 파일이 Amazon S3에 도착하면 ECS 작업 정의를 사용하여 ECS 작업을 호출하도록 Lambda 함수를 조정합니다. C. Parallel 상태로 AWS Step Functions 상태 시스템을 생성하여 Lambda 함수를 호출합니다. Lambda 함수의 프로비저닝된 동시성을 높입니다. D. 호환성 유형이 Amazon EC2인 새 Amazon Elastic Container Service(Amazon ECS) 작업 정의를 생성합니다. Amazon Elastic Container Registry(Amazon ECR)에서 새 이미지를 사용하도록 작업 정의를 구성합니다. 새 파일이 Amazon S3에 도착하면 ECS 작업 정의를 사용하여 ECS 작업을 호출하도록 Lambda 함수를 조정합니다. E. Amazon Elastic File System(Amazon EFS)에 이미지를 저장하고 Amazon RDS DB 인스턴스에 메타데이터를 저장하도록 애플리케이션을 수정합니다. Lambda 함수를 조정하여 EFS 파일 공유를 탑재합니다. Answer: A,B Explanation: 1. Modify the application deployment by building a Docker image that contains the application code. Publish the image to Amazon Elastic Container Registry (Amazon ECR). - This step is necessary to package the application code in a container and make it available for running on ECS. B. Create a new Amazon Elastic Container Service (Amazon ECS) task definition with a compatibility type of AWS Fargate. Configure the task definition to use the new image in Amazon Elastic Container Registry (Amazon ECR). Adjust the Lambda function to invoke an ECS task by using the ECS task definition when a new file arrives in Amazon S3.`;