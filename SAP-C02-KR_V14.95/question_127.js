const question_127=`QUESTION NO: 127 한 회사에서 AWS Elastic Beanstalk 및 Java를 사용하여 파일럿 애플리케이션을 개발했습니다. 개발 중 비용을 절감하기 위해 회사의 개발 팀은 애플리케이션을 단일 인스턴스 환경에 배포했습니다. 최근 테스트에 따르면 애플리케이션이 예상보다 더 많은 CPU를 사용하는 것으로 나타났습니다. CPU 사용률은 정기적으로 85%보다 높으며 이로 인해 일부 성능 병목 현상이 발생합니다. 솔루션 설계자는 회사가 응용 프로그램을 프로덕션으로 시작하기 전에 성능 문제를 완화해야 합니다. 최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까? A. 새 Elastic Beanstalk 애플리케이션을 만듭니다. 부하 분산 환경 유형을 선택합니다. 모든 가용 영역을 선택합니다. 최대 CPU 사용률이 5분 동안 85%를 초과하는 경우 실행될 확장 규칙을 추가합니다. B. 두 번째 Elastic Beanstalk 환경을 생성합니다. 트래픽 분할 배포 정책을 적용합니다. 평균 CPU 사용률이 5분 동안 85% 이상인 경우 새 환경으로 보낼 들어오는 트래픽의 백분율을 지정합니다. C. 부하 분산 환경 유형을 사용하도록 기존 환경의 용량 구성을 수정합니다. 모든 가용 영역을 선택합니다. 평균 CPU 사용률이 5분 동안 85%를 초과하는 경우 실행될 확장 규칙을 추가합니다. D. 로드 밸런싱 옵션으로 환경 재구축 작업을 선택합니다. 가용 영역을 선택합니다. 총 CPU 사용률이 5분 동안 85%를 초과하는 경우 실행할 스케일 아웃 규칙을 추가합니다. Answer: C Explanation: This solution will meet the requirements with the least operational overhead because it allows the company to modify the existing environment's capacity configuration, so it becomes a load-balanced environment type. By selecting all availability zones, the company can ensure that the application is running in multiple availability zones, which can help to improve the availability and scalability of the application. The company can also add a scale-out rule that will run if the average CPU utilization is over 85% for 5 minutes, which can help to mitigate the performance issues. This solution does not require creating new Elastic Beanstalk environments or rebuilding the existing one, which reduces the operational overhead. You can refer to the AWS Elastic Beanstalk documentation for more information on how to use this service: https://aws.amazon.com/elasticbeanstalk/ You can refer to the AWS documentation for more information on how to use autoscaling: https://aws.amazon.com/autoscaling/`;