const question_133=`QUESTION NO: 133 한 회사가 us-east-1 리전의 Amazon RDS for MySQL DB 인스턴스에 데이터베이스를 배포했습니다. 회사는 유럽의 고객이 데이터를 사용할 수 있도록 해야 합니다. 유럽의 고객은 미국(US)의 고객과 동일한 데이터에 액세스할 수 있어야 하며 높은 애플리케이션 대기 시간 또는 오래된 데이터를 허용하지 않습니다. 유럽 고객과 미국 고객은 데이터베이스에 기록해야 합니다. 두 고객 그룹 모두 다른 그룹의 업데이트를 실시간으로 확인해야 합니다. 이러한 요구 사항을 충족하는 솔루션은 무엇입니까? A. RDS for MySQL DB 인스턴스의 Amazon Aurora MySQL 복제본을 생성합니다. RDS DB 인스턴스에 대한 애플리케이션 쓰기를 일시 중지합니다. Aurora 복제본을 독립 실행형 DB 클러스터로 승격합니다. Aurora 데이터베이스를 사용하도록 애플리케이션을 재구성하고 쓰기를 재개하십시오. eu-west-1을 보조 리전으로 추가합니다. 06 클러스터. DB 클러스터에서 쓰기 전달을 활성화합니다. eu-west-1에 애플리케이션을 배포합니다. eu-west-1에서 Aurora MySQL 엔드포인트를 사용하도록 애플리케이션을 구성합니다. B. RDS for MySQL DB 인스턴스에 대해 eu-west-1에 교차 리전 복제본을 추가합니다. 쓰기 쿼리를 다시 기본 DB 인스턴스로 복제하도록 복제본을 구성합니다. eu-west-1에 애플리케이션을 배포합니다. eu-west-1에서 RDS for MySQL 엔드포인트를 사용하도록 애플리케이션을 구성합니다. C. RDS for MySQL DB 인스턴스에서 eu-west-1로 가장 최근 스냅샷을 복사합니다. 스냅샷에서 eu-west-1에 새 RDS for MySQL DB 인스턴스를 생성합니다. us-east-1에서 euwest- 1로 MySQL 논리적 복제를 구성합니다. DB 클러스터에서 쓰기 전달을 활성화합니다. eu-west-1에 애플리케이션을 배포합니다. eu-west-1에서 RDS for MySQL 엔드포인트를 사용하도록 애플리케이션을 구성합니다. D. RDS for MySQL DB 인스턴스를 Amazon Aurora MySQL DB 클러스터로 변환합니다. euwest- 1을 DB 클러스터에 보조 리전으로 추가합니다. DB 클러스터에서 쓰기 전달을 활성화합니다. eu-west-1에 애플리케이션을 배포합니다. eu-west-1에서 Aurora MySQL 엔드포인트를 사용하도록 애플리케이션을 구성합니다. Answer: D(A인것같음) Explanation: The company should use AWS Amplify to create a static website for uploads of media files. The company should use Amplify Hosting to serve the website through Amazon CloudFront. The company should use Amazon S3 to store the uploaded media files. The company should use Amazon Cognito to authenticate users. This solution will meet the requirements with the least operational overhead because AWS Amplify is a complete solution that lets frontend web and mobile developers easily build, ship, and host full-stack applications on AWS, with the flexibility to leverage the breadth of AWS services as use cases evolve. No cloud expertise needed1. By using AWS Amplify, the company can refactor the application to a serverless architecture that reduces operational complexity and costs. AWS Amplify offers the following features and benefits: Amplify Studio: A visual interface that enables you to build and deploy a full-stack app quickly, including frontend UI and backend. Amplify CLI: A local toolchain that enables you to configure and manage an app backend with just a few commands. Amplify Libraries: Open-source client libraries that enable you to build cloud-powered mobile and web apps. Amplify UI Components: Open-source design system with cloud-connected components for building feature-rich apps fast. Amplify Hosting: Fully managed CI/CD and hosting for fast, secure, and reliable static and server-side rendered apps. By using AWS Amplify to create a static website for uploads of media files, the company can leverage Amplify Studio to visually build a pixel-perfect UI and connect it to a cloud backend in clicks. By using Amplify Hosting to serve the website through Amazon CloudFront, the company can easily deploy its web app or website to the fast, secure, and reliable AWS content delivery network (CDN), with hundreds of points of presence globally. By using Amazon S3 to store the uploaded media files, the company can benefit from a highly scalable, durable, and cost-effective object storage service that can handle any amount of data2. By using Amazon Cognito to authenticate users, the company can add user sign-up, sign-in, and access control to its web app with a fully managed service that scales to support millions of users3. The other options are not correct because: Using AWS Application Migration Service to migrate the application server to Amazon EC2 instances would not refactor the application or accelerate development. AWS Application Migration Service (AWS MGN) is a service that enables you to migrate physical servers, virtual machines (VMs), or cloud servers from any source infrastructure to AWS without requiring agents or specialized tools. However, this would not address the challenges of overutilization and data uploads failures. It would also not reduce operational overhead or costs compared to a serverless architecture. Creating a static website for uploads of media files and using AWS AppSync to create an API would not be as simple or fast as using AWS Amplify. AWS AppSync is a service that enables you to create flexible APIs for securely accessing, manipulating, and combining data from one or more data sources. However, this would require more configuration and management than using Amplify Studio and Amplify Hosting. It would also not provide authentication features like Amazon Cognito. Setting up AWS IAM Identity Center (AWS Single Sign-On) to give users the ability to sign in to the application would not be as suitable as using Amazon Cognito. AWS Single Sign-On (AWS SSO) is a service that enables you to centrally manage SSO access and user permissions across multiple AWS accounts and business applications. However, this service is designed for enterprise customers who need to manage access for employees or partners across multiple resources. It is not intended for authenticating end users of web or mobile apps. Reference: https://aws.amazon.com/amplify/ https://aws.amazon.com/s3/ https://aws.amazon.com/cognito/ https://aws.amazon.com/mgn/ https://aws.amazon.com/appsync/ https://aws.amazon.com/single-sign-on/
GPT 3.5 says "텍스트에서 제공된 답변은 잘못되었습니다. 올바른 답은 A입니다.

유럽 고객이 데이터에 액세스할 수 있도록하고 유럽 및 미국 고객 모두에게 실시간 업데이트를 보장하기 위해 회사는 Amazon Aurora MySQL을 솔루션으로 사용해야 합니다.

다음은 올바른 솔루션의 세부 내용입니다:

1. eu-west-1 지역에서 RDS for MySQL DB 인스턴스의 Amazon Aurora MySQL 복제본을 생성합니다.
2. 응용 프로그램이 RDS DB 인스턴스에 쓰기를 일시 중지합니다.
3. Aurora 복제본을 독립형 DB 클러스터로 승격시킵니다.
4. 응용 프로그램을 Aurora 데이터베이스를 사용하도록 다시 구성하고 쓰기를 재개합니다.
5. DB 클러스터에 eu-west-1을 보조 지역으로 추가합니다.
6. DB 클러스터에서 쓰기 전달을 활성화합니다.
7. 응용 프로그램을 eu-west-1에 배포합니다.
8. 응용 프로그램을 eu-west-1의 Aurora MySQL 엔드포인트를 사용하도록 구성합니다.

이 솔루션은 유럽 및 미국 고객 모두가 동일한 데이터에 액세스할 수 있으며, 한 그룹의 고객이 수행한 업데이트가 다른 그룹에 실시간으로 반영됩니다."`;