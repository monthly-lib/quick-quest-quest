const question_179=`QUESTION NO: 179 제조 회사에서 공장용 검사 솔루션을 구축하고 있습니다. 이 회사는 각 조립 라인 끝에 IP 카메라가 있습니다. 이 회사는 Amazon SageMaker를 사용하여 기계 학습(ML) 모델을 교육하여 스틸 이미지에서 일반적인 결함을 식별했습니다. 회사는 결함이 감지되면 공장 작업자에게 현지 피드백을 제공하려고 합니다. 회사는 공장의 인터넷 연결이 끊어진 경우에도 이 피드백을 제공할 수 있어야 합니다. 회사에는 작업자에게 로컬 피드백을 제공하는 API를 호스팅하는 로컬 Linux 서버가 있습니다. 회사는 이러한 요구 사항을 충족하기 위해 ML 모델을 어떻게 배포해야 합니까? A. 각 IP 카메라에서 AWS로 Amazon Kinesis 비디오 스트림을 설정합니다. Amazon EC2 인스턴스를 사용하여 스트림의 스틸 이미지를 찍습니다. 이미지를 Amazon S3 버킷에 업로드합니다. ML 모델을 사용하여 SageMaker 엔드포인트를 배포합니다. 새 이미지가 업로드될 때 추론 엔드포인트를 호출하도록 AWS Lambda 함수를 호출합니다. 결함이 감지되면 로컬 API를 호출하도록 Lambda 함수를 구성합니다. B. 로컬 서버에 AWS IoT Greengrass를 배포합니다. ML 모델을 Greengrass 서버에 배포합니다. Greengrass 구성 요소를 생성하여 카메라에서 스틸 이미지를 가져오고 추론을 실행합니다. 결함이 감지되면 로컬 API를 호출하도록 구성 요소를 구성합니다. C. AWS Snowball 디바이스를 주문합니다. SageMaker 엔드포인트, ML 모델 및 Amazon EC2 인스턴스를 Snowball 디바이스에 배포합니다. 카메라에서 스틸 이미지를 가져옵니다. EC2 인스턴스에서 추론을 실행합니다. 결함이 감지되면 로컬 API를 호출하도록 인스턴스를 구성합니다. D. 각 IP 카메라에 Amazon Monitron 장치를 배포합니다. 온프레미스에 Amazon Monitron Gateway를 배포합니다. ML 모델을 Amazon Monitron 디바이스에 배포합니다. 결함이 감지되면 Amazon Monitron 상태 경보를 사용하여 AWS Lambda 함수에서 로컬 API를 호출합니다. Answer: B Explanation: The company should use AWS IoT Greengrass to deploy the ML model to the local server and provide local feedback to the factory workers. AWS IoT Greengrass is a service that extends AWS cloud capabilities to local devices, allowing them to collect and analyze data closer to the source of information, react autonomously to local events, and communicate securely with each other on local networks1. AWS IoT Greengrass also supports ML inference at the edge, enabling devices to run ML models locally without requiring internet connectivity2. The other options are not correct because: Setting up an Amazon Kinesis video stream from each IP camera to AWS would not work if the factory's internet connectivity is down. It would also incur unnecessary costs and latency to stream video data to the cloud and back. Ordering an AWS Snowball device would not be a scalable or cost-effective solution for deploying the ML model. AWS Snowball is a service that provides physical devices for data transfer and edge computing, but it is not designed for continuous operation or frequent updates3. Deploying Amazon Monitron devices on each IP camera would not work because Amazon Monitron is a service that monitors the condition and performance of industrial equipment using sensors and machine learning, not cameras4. Reference: https://aws.amazon.com/greengrass/ https://docs.aws.amazon.com/greengrass/v2/developerguide/use-machine-learninginference.html https://aws.amazon.com/snowball/ https://aws.amazon.com/monitron/`;