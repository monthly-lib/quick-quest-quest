const question_139=`QUESTION NO: 139 솔루션 설계자는 회사에서 곧 출시할 새 애플리케이션의 데이터 저장 및 검색 아키텍처를 설계하고 있습니다. 이 애플리케이션은 전 세계 디바이스에서 분당 수백만 개의 작은 레코드를 수집하도록 설계되었습니다. 각 레코드는 크기가 4KB 미만이며 짧은 대기 시간으로 검색할 수 있는 내구성 있는 위치에 저장해야 합니다. 데이터는 일시적이며 회사는 데이터를 120일 동안만 저장해야 하며 그 이후에는 데이터를 삭제할 수 있습니다. 솔루션 설계자는 1년 동안 스토리지 요구 사항이 약 10-15TB가 될 것이라고 계산합니다. 가장 비용 효율적이고 설계 요구 사항을 충족하는 스토리지 전략은 무엇입니까? A. 각 수신 레코드를 Amazon S3 버킷에 단일 .csv 파일로 저장하여 인덱스 검색이 가능하도록 애플리케이션을 설계하십시오. 120일보다 오래된 데이터를 삭제하도록 수명 주기 정책을 구성합니다. B. 각 수신 레코드를 규모에 맞게 구성된 Amazon DynamoDB 테이블에 저장하도록 애플리케이션을 설계합니다. 120일보다 오래된 레코드를 삭제하도록 DynamoOB TTL(Time to Live) 기능을 구성합니다. C. 각 수신 레코드를 Amazon RDS MySQL 데이터베이스의 단일 테이블에 저장하도록 애플리케이션을 설계합니다. 쿼리를 실행하는 야간 cron 작업을 실행하여 120일보다 오래된 레코드를 삭제합니다. D. 수신 레코드를 Amazon S3 버킷에 쓰기 전에 일괄 처리하도록 애플리케이션을 설계합니다. 배치의 레코드 목록을 포함하도록 객체의 메타데이터를 업데이트하고 Amazon S3 메타데이터 검색 기능을 사용하여 데이터를 검색합니다. Answer: B Explanation: a. Configure a lifecycle policy to delete the data after 120 days. DynamoDB with TTL, cheaper for sustained throughput of small items + suited for fast retrievals. S3 cheaper for storage only, much higher costs with writes. RDS not designed for this use case.`;