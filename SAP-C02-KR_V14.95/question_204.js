const question_204=`QUESTION NO: 204 회사는 온프레미스 데이터 센터에서 애플리케이션을 실행합니다. 이 애플리케이션은 사용자에게 미디어 파일을 업로드할 수 있는 기능을 제공합니다. 파일은 파일 서버에 유지됩니다. 웹 애플리케이션에는 많은 사용자가 있습니다. 응용 프로그램 서버가 과도하게 사용되어 때때로 데이터 업로드가 실패합니다. 회사는 파일 서버에 새 스토리지를 자주 추가합니다. 회사는 애플리케이션을 AWS로 마이그레이션하여 이러한 문제를 해결하고자 합니다. 미국과 캐나다 전역의 사용자가 애플리케이션에 액세스합니다. 인증된 사용자만 애플리케이션에 액세스하여 파일을 업로드할 수 있어야 합니다. 회사는 애플리케이션을 리팩터링하는 솔루션을 고려할 것이며 회사는 애플리케이션 개발을 가속화해야 합니다. 최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까? A. AWS Application Migration Service를 사용하여 애플리케이션 서버를 Amazon EC2 인스턴스로 마이그레이션합니다. EC2 인스턴스에 대한 Auto Scaling 그룹을 생성합니다. Application Load Balancer를 사용하여 요청을 분산합니다. Amazon S3를 사용하여 파일을 유지하도록 애플리케이션을 수정합니다. Amazon Cognito를 사용하여 사용자를 인증합니다. B. AWS Application Migration Service를 사용하여 애플리케이션 서버를 Amazon EC2 인스턴스로 마이그레이션합니다. EC2 인스턴스에 대한 Auto Scaling 그룹을 생성합니다. Application Load Balancer를 사용하여 요청을 분산합니다. 사용자가 애플리케이션에 로그인할 수 있도록 AWS IAM Identity Center(AWS Single Sign-On)를 설정합니다. Amazon S3를 사용하여 파일을 유지하도록 애플리케이션을 수정합니다. C. 미디어 파일 업로드를 위한 정적 웹사이트를 만듭니다. 정적 자산을 Amazon S3에 저장합니다. AWS AppSync를 사용하여 API를 생성합니다. AWS Lambda 확인자를 사용하여 미디어 파일을 Amazon S3에 업로드합니다. Amazon Cognito를 사용하여 사용자를 인증합니다. D. AWS Amplify를 사용하여 미디어 파일 업로드를 위한 정적 웹사이트를 생성합니다. Amplify Hosting을 사용하여 Amazon CloudFront를 통해 웹 사이트를 제공합니다. Amazon S3를 사용하여 업로드된 미디어 파일을 저장합니다. Amazon Cognito를 사용하여 사용자를 인증합니다. Answer: D Explanation: The company should use AWS Amplify to create a static website for uploads of media files. The company should use Amplify Hosting to serve the website through Amazon CloudFront. The company should use Amazon S3 to store the uploaded media files. The company should use Amazon Cognito to authenticate users. This solution will meet the requirements with the least operational overhead because AWS Amplify is a complete solution that lets frontend web and mobile developers easily build, ship, and host full-stack applications on AWS, with the flexibility to leverage the breadth of AWS services as use cases evolve. No cloud expertise needed1. By using AWS Amplify, the company can refactor the application to a serverless architecture that reduces operational complexity and costs. AWS Amplify offers the following features and benefits: Amplify Studio: A visual interface that enables you to build and deploy a full-stack app quickly, including frontend UI and backend. Amplify CLI: A local toolchain that enables you to configure and manage an app backend with just a few commands. Amplify Libraries: Open-source client libraries that enable you to build cloud-powered mobile and web apps. Amplify UI Components: Open-source design system with cloud-connected components for building feature-rich apps fast. Amplify Hosting: Fully managed CI/CD and hosting for fast, secure, and reliable static and server-side rendered apps. By using AWS Amplify to create a static website for uploads of media files, the company can leverage Amplify Studio to visually build a pixel-perfect UI and connect it to a cloud backend in clicks. By using Amplify Hosting to serve the website through Amazon CloudFront, the company can easily deploy its web app or website to the fast, secure, and reliable AWS content delivery network (CDN), with hundreds of points of presence globally. By using Amazon S3 to store the uploaded media files, the company can benefit from a highly scalable, durable, and cost-effective object storage service that can handle any amount of data2. By using Amazon Cognito to authenticate users, the company can add user sign-up, sign-in, and access control to its web app with a fully managed service that scales to support millions of users3. The other options are not correct because: Using AWS Application Migration Service to migrate the application server to Amazon EC2 instances would not refactor the application or accelerate development. AWS Application Migration Service (AWS MGN) is a service that enables you to migrate physical servers, virtual machines (VMs), or cloud servers from any source infrastructure to AWS without requiring agents or specialized tools. However, this would not address the challenges of overutilization and data uploads failures. It would also not reduce operational overhead or costs compared to a serverless architecture. Creating a static website for uploads of media files and using AWS AppSync to create an API would not be as simple or fast as using AWS Amplify. AWS AppSync is a service that enables you to create flexible APIs for securely accessing, manipulating, and combining data from one or more data sources. However, this would require more configuration and management than using Amplify Studio and Amplify Hosting. It would also not provide authentication features like Amazon Cognito. Setting up AWS IAM Identity Center (AWS Single Sign-On) to give users the ability to sign in to the application would not be as suitable as using Amazon Cognito. AWS Single Sign-On (AWS SSO) is a service that enables you to centrally manage SSO access and user permissions across multiple AWS accounts and business applications. However, this service is designed for enterprise customers who need to manage access for employees or partners across multiple resources. It is not intended for authenticating end users of web or mobile apps. Reference: https://aws.amazon.com/amplify/ https://aws.amazon.com/s3/ https://aws.amazon.com/cognito/ https://aws.amazon.com/mgn/ https://aws.amazon.com/appsync/ https://aws.amazon.com/single-sign-on/`;